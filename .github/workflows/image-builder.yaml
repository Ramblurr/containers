---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Image Builder

on:
  workflow_call:
    inputs:
      app:
        type: string
        description: Application Name
        required: true
      release:
        type: boolean
        description: Release
        required: true

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.bake-options.outputs.platforms }}
      version: ${{ steps.bake-options.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());

      - name: Get Bake Options
        id: bake-options
        uses: ./.github/actions/bake-options
        with:
          app: ${{ inputs.app }}

      - name: Get Image Versions
        uses: ./.github/actions/image-versions
        id: image-versions
        with:
          upstream-version: ${{ steps.bake-options.outputs.version }}

      - name: Build Container Metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        id: meta
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          flavor: latest=false
          images: |
            ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.image-versions.outputs.semantic }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.image-versions.outputs.semantic }},enable=${{ steps.image-versions.outputs.is-valid-semver }}
            type=semver,pattern={{major}},value=${{ steps.image-versions.outputs.semantic }},enable=${{ steps.image-versions.outputs.is-valid-semver }}
            type=raw,value=${{ steps.image-versions.outputs.raw }},enable=${{ steps.image-versions.outputs.is-valid-semver }}
            type=raw,value=rolling

      - name: Upload Bake Metadata
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ steps.meta.outputs.bake-file }}
          if-no-files-found: error
          retention-days: 1

  build:
    name: Build (${{ matrix.platform }})
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
    runs-on: ${{ startsWith(matrix.platform, 'linux/arm') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
            core.setOutput('target-arch', '${{ matrix.platform }}'.split('/').pop());

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Download Bake Metadata
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build
        uses: docker/bake-action@4ba453fbc2db7735392b93edf935aaf9b1e8f747 # v6.5.0
        id: bake
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ runner.temp }}/docker-metadata-action-bake.json
          set: |
            *.args.VENDOR=${{ steps.vars.outputs.repository-owner }}
            *.cache-from=${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', steps.vars.outputs.repository-owner, inputs.app, steps.vars.outputs.target-arch) }}
            *.cache-to=${{ inputs.release && format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max,compression=zstd,force-compression=true', steps.vars.outputs.repository-owner, inputs.app, steps.vars.outputs.target-arch) || '' }}
            *.labels.org.opencontainers.image.title=${{ inputs.app }}
            *.labels.org.opencontainers.image.url=https://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}
            *.labels.org.opencontainers.image.version=${{ needs.prepare.outputs.version }}
            *.labels.org.opencontainers.image.revision=${{ github.sha }}
            *.labels.org.opencontainers.image.vendor=${{ steps.vars.outputs.repository-owner }}
            ${{ inputs.release && format('*.output=type=image,name=ghcr.io/{0}/{1},push-by-digest=true,name-canonical=true,push=true', steps.vars.outputs.repository-owner, inputs.app) || '*.output=type=docker' }}
            *.platform=${{ matrix.platform }}
            *.tags=
          source: .
          targets: image
          workdir: ./apps/${{ inputs.app }}

      - if: ${{ ! inputs.release }}
        name: Run Container Tests
        uses: ./.github/actions/container-tests
        with:
          app: ${{ inputs.app }}
          image: ${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.config.digest'] }}
          token: ${{ github.token }}

      - if: ${{ inputs.release }}
        name: Export Digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          DIGEST="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"

      - if: ${{ inputs.release }}
        name: Upload Digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.app }}-digests-${{ steps.vars.outputs.target-arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  release:
    if: ${{ inputs.release }}
    name: Release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());

      - name: Download Bake Metadata
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ inputs.app }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Download Digests
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ inputs.app }}-digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Manifest List and Push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
              $(jq --raw-output --compact-output '.target."docker-metadata-action".tags | map(select(startswith("ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}")) | "-t " + .) | join(" ")' ${{ runner.temp }}/docker-metadata-action-bake.json) \
              $(printf 'ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}@sha256:%s ' *)

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}:$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)

      - name: Export Digest
        id: digest
        run: |
          TAG=$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}:${TAG} --format '{{ json . }}' | jq --raw-output '.manifest.digest')
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT

  attest:
    if: ${{ inputs.release }}
    name: Attest
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload Dependency Snapshot
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          dependency-snapshot: true
          image: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}@${{ needs.release.outputs.digest }}

      - name: Attestation
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          push-to-registry: true
          subject-name: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}
          subject-digest: ${{ needs.release.outputs.digest }}

      - name: Verify Attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh attestation verify --repo ${{ github.repository }} oci://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}@${{ needs.release.outputs.digest }}

  notify:
    if: ${{ inputs.release && !cancelled() }}
    needs: ["prepare", "build", "release", "attest"]
    name: Notify
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') }}
        name: Send Discord Webhook
        uses: sarisia/actions-status-discord@5ddd3b114a98457dd80a39b2f00b6a998cd69008 # v1.15.3
        with:
          color: "0xFF0000"
          description: |
            Application: `${{ inputs.app }}`
            Version: `${{ needs.prepare.outputs.version }}`
            [Rebuild](${{ github.server_url }}/${{ github.repository }}/actions/workflows/release.yaml)
          nodetail: true
          title: Container build failed
          username: GitHub Actions
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
